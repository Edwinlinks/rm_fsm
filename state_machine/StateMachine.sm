%class StateMachine
%header rm_fsm/StateMachine.h

%include <rm_msgs/DbusData.h>
%include <rm_msgs/TofRadarData.h>
%include <rm_msgs/GameRobotStatus.h>
%include <rm_msgs/GameStatus.h>
%include <sensor_msgs/JointState.h>
%import rm_msgs

%declare #include <rm_msgs/DbusData.h>

%declare using namespace rm_msgs;

%start StateMachineMap::Stop

%map StateMachineMap
%%

// Syntax:
//
// State {
//  TransitionEvent
//      [guard]
//      NextState
//      {Action}
// }

Stop
    Entry {
    info("Stop state entered");
    }
{
    dbusUpdate(data: const DbusData &)
        Idle
        {
        }
}

Idle
    Entry {
    info("Idle state entered");
    }
{
    dbusUpdate(data: const DbusData &)
        [ data.s_r == DbusData::MID ]
        Raw
        {
        }
}

Raw
    Entry {
    info("Raw state entered");
    }
{
    dbusUpdate(data: const DbusData &)
        [ data.s_r == DbusData::DOWN ]
        Raw
        {
        }
}

Default
{


}
%%
